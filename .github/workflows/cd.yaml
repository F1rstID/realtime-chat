name: ci-pipeline

on:
  push:
    branches:
      - main
    paths-ignore:  # 불필요한 빌드 방지
      - '**.md'
      - '.gitignore'
      - 'LICENSE'

jobs:
  ci-cd:  # 단일 job으로 통합하여 중복 설정 제거
    runs-on: ubuntu-latest
    steps:
      - name: Cache Docker layers  # 도커 레이어 캐싱 추가
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug  # 빌드 성능 향상

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/realtime-chat:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          platforms: linux/amd64  # 필요한 플랫폼만 지정
          build-args: |  # 빌드 최적화를 위한 인자 추가
            BUILDKIT_INLINE_CACHE=1

      - name: Move cache  # 캐시 정리
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            docker-compose pull
            docker-compose up -d --remove-orphans
            docker image prune -f  # 사용하지 않는 이미지 정리